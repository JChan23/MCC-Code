A = 0 #starting power
B = 0 #power needed to reach
array = []

file = open("text.txt", "r") #data from external file
with open('text.txt') as f:
    temparray = f.read().splitlines()


for i in range(len(temparray)):
    e = temparray[i].split(" ")
    array.append([eval(i) for i in e])
count = 0
#important values: index 1 and 2 of sub arrays of every even index of the main array
for row in range(len(array)):
    if row % 2 == 0:
        killed = 0
        A = array[row][1]
        B = array[row][2]
        enemies = array[row+1]
        enemies.sort()
        enemies.reverse()
        index = 0
        while (A < B) and (index < len(enemies)):
            if A > enemies[index]:
                A = A + enemies[index]
                killed = killed + 1
                enemies.pop(index)
                index = 0
            else:
                index = index + 1
        if A >= B:
            print(killed)
        else:
            print(-1)


#content of external file:
#1000 550 360507
#694 228 703 529 764 433 212 796 553 492 514 540 668 363 977 216 818 772 757 227 853 212 447 221 406 961 521 895 208 479 990 173 409 551 712 426 979 337 825 670 609 214 616 761 174 666 482 784 664 61 453 564 163 576 650 708 409 492 954 146 446 658 94 823 370 248 915 187 182 174 154 326 950 797 53 800 835 642 678 320 983 823 822 787 495 364 525 145 960 507 7 467 467 495 287 247 29 738 360 206 54 158 772 160 337 241 648 637 535 694 32 918 915 446 511 745 775 490 321 843 891 542 19 692 853 381 745 791 452 900 44 499 165 944 91 505 593 497 789 746 591 877 807 929 716 795 244 495 111 482 599 527 282 931 804 757 158 406 704 325 434 527 727 510 51 901 945 878 418 317 473 514 343 990 201 564 496 713 59 982 85 650 293 927 455 495 350 643 937 650 585 556 39 459 805 610 213 45 231 695 910 480 148 350 245 537 463 625 406 496 701 531 763 356 525 282 995 37 171 591 280 501 912 248 297 672 950 979 685 260 174 350 158 225 812 687 378 198 162 285 343 690 897 922 486 324 426 915 923 930 571 906 100 796 58 616 696 987 760 357 924 48 654 845 89 944 318 494 583 949 953 556 177 266 900 763 654 71 565 790 381 346 400 165 675 739 544 951 166 872 323 828 354 341 913 896 288 333 457 311 206 790 564 192 836 668 827 26 756 987 8 684 805 970 172 19 481 374 884 231 257 468 608 202 974 955 10 613 297 221 765 827 264 389 986 639 537 405 533 165 272 101 204 997 773 143 819 814 709 441 175 950 949 8 904 797 577 44 99 256 230 680 757 926 812 167 203 228 674 132 589 868 210 424 161 72 715 212 760 400 427 880 747 144 979 436 29 804 277 399 98 941 491 519 887 976 450 438 181 460 284 617 451 150 578 883 782 227 944 11 78 165 404 847 202 958 288 410 541 974 442 590 923 25 298 70 461 84 180 699 827 764 448 548 894 471 640 604 772 446 136 356 54 258 28 935 383 948 816 205 962 228 924 854 901 367 309 6 103 611 817 317 770 98 136 750 525 182 499 438 496 654 877 1 570 205 537 858 126 112 710 146 23 190 166 672 927 218 952 182 39 82 857 710 666 397 832 863 544 688 71 460 684 243 573 587 58 798 744 767 250 668 610 74 90 753 364 875 352 225 912 964 43 623 839 190 29 26 866 699 223 873 203 590 857 346 488 959 881 857 335 541 230 782 406 63 285 432 226 190 617 709 317 932 613 980 310 514 921 438 608 748 295 84 10 478 97 912 741 693 529 767 164 164 214 262 233 179 471 404 785 27 910 533 142 790 473 301 849 939 628 473 471 951 174 519 344 158 706 503 523 719 604 486 522 28 877 327 577 316 986 861 284 298 913 394 158 666 176 882 348 244 347 285 800 514 785 910 220 687 862 80 158 607 602 367 940 919 606 734 555 491 935 383 870 995 510 232 287 222 665 303 560 710 549 59 633 143 668 549 873 246 892 516 191 158 51 450 654 363 123 374 93 86 657 639 338 782 682 467 98 239 928 677 670 863 887 829 59 389 232 493 350 464 283 562 76 353 33 528 553 722 858 661 105 484 921 210 976 310 193 313 609 843 720 78 652 198 253 785 726 647 485 701 573 862 637 789 302 831 772 887 886 821 36 360 6 266 482 811 441 23 651 92 620 29 792 992 434 176 650 68 926 801 322 432 378 256 549 678 957 392 729 336 352 19 352 671 588 30 731 525 982 421 927 996 97 851 169 323 836 294 710 277 169 196 13 439 462 502 924 635 820 774 555 729 509 534 448 487 858 725 192 964 611 670 476 655 671 895 229 271 69 729 13 836 183 180 567 626 924 467 604 370 81 593 983 237 110 615 734 839 673 840 972 470 490 80 252 449 255 308 933 91 525 674 486 836 766 392 654 705 891 23 448 218 450 272 961 384 587 892 353 849 861 422 927 213 78 483 587 163 934 437 11 867 12 621 398 38 375 346 455 690 427 511 208 378 685 434 46 382 350 823 369 156 240 228 430 645 703 611 390 634 244 69 535 130 323 567 760 218 817 914 6 591 154 309 814 723 966 537 482 840 304 872 459 213 242 537 7 877 313 285 313 413 804 22 73 670 944 599 459 670 50 583 691 940 787 554 993 474 812 680 2 540 937 686 203 802 643 74 110 621 24 872 481 50 678 205 218 908 584 123 38 510 166 182 518 218 221 183 495 284 668 126 39 617 533 766 479 885 378 677 627 18 732 912 499 70
